// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Containers PageExternal FormArrayContainerCode Forms FormContainerCodeVerifyEmail shallow renders correctly, with componentWillUpdate, componentDidUpdate, and componentWillUnmount, without email or email additional 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormContainerCodeVerifyEmail
    clearElement={
      [MockFunction] {
        "calls": Array [
          Array [
            "codeEmailVerifyForm",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    codeTypes={
      Object {
        "verifyEmail": Object {
          "id": "verifyEmail",
          "needed": true,
        },
        "verifyEmailAdditional": Object {
          "id": "verifyEmailAdditional",
          "needed": true,
        },
        "verifyPhone": Object {
          "id": "verifyPhone",
          "needed": true,
        },
      }
    }
    dispatch={[Function]}
    fields={
      Object {
        "accountCustomer": Object {
          "id": "accountCustomer",
          "value": "",
        },
        "accountEmail": Object {
          "id": "accountEmail",
          "value": "",
        },
        "accountEmailAdditional": Object {
          "id": "accountEmailAdditional",
          "value": "",
        },
        "accountName": Object {
          "id": "accountName",
          "value": "",
        },
        "accountNameOnCard": Object {
          "id": "accountNameOnCard",
          "value": "",
        },
        "accountPhone": Object {
          "id": "accountPhone",
          "value": "",
        },
        "accountPromoCode": Object {
          "id": "accountPromoCode",
          "value": "",
        },
        "accountPromoCodeValid": Object {
          "id": "accountPromoCodeValid",
          "value": true,
        },
        "list": Array [
          "accountName",
          "accountEmail",
          "accountEmailAdditional",
          "accountPhone",
          "accountNameOnCard",
          "accountPromoCode",
          "accountPromoCodeValid",
          "accountCustomer",
        ],
      }
    }
    formHeightBuffer={50}
    heightRef={[MockFunction]}
    history={Object {}}
    inputHeightBuffer={15}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "path": undefined,
      }
    }
    mediaWidth={700}
    setHeight={
      [MockFunction] {
        "calls": Array [
          Array [
            "codeEmailVerifyForm",
          ],
          Array [
            "codeEmailVerifyForm",
          ],
          Array [
            "codeEmailVerifyForm",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    statusAuth={
      Object {
        "authStatusChangePassword": Object {
          "id": "authStatusChangePassword",
          "status": "IDLE",
        },
        "authStatusDeleteAccount": Object {
          "id": "authStatusDeleteAccount",
          "status": "SUCCESS",
        },
        "authStatusForgotPassword": Object {
          "id": "authStatusForgotPassword",
          "status": "IDLE",
        },
        "authStatusLogin": Object {
          "id": "authStatusLogin",
          "status": "IDLE",
        },
        "authStatusLoginMFA": Object {
          "id": "authStatusLoginMFA",
          "status": "IDLE",
        },
        "authStatusLogout": Object {
          "id": "authStatusLogout",
          "status": "SUCCESS",
        },
        "authStatusResetPassword": Object {
          "id": "authStatusResetPassword",
          "status": "IDLE",
        },
        "authStatusSignOutDevices": Object {
          "id": "authStatusSignOutDevices",
          "status": "IDLE",
        },
        "authStatusSignUp": Object {
          "id": "authStatusSignUp",
          "status": "IDLE",
        },
        "authStatusVerifyEmail": Object {
          "id": "authStatusVerifyEmail",
          "status": "IDLE",
        },
        "authStatusVerifyEmailLink": Object {
          "id": "authStatusVerifyEmailLink",
          "status": "IDLE",
        },
        "authStatusVerifyPhone": Object {
          "id": "authStatusVerifyPhone",
          "status": "IDLE",
        },
        "authStatusVerifyPhoneCode": Object {
          "id": "authStatusVerifyPhoneCode",
          "status": "IDLE",
        },
      }
    }
    width={300}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "email": "",
      "emailAdditional": "",
      "formHeightBuffer": 50,
      "heightRef": [MockFunction],
      "inputHeightBuffer": 15,
      "width": 300,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "",
        "emailAdditional": "",
        "formHeightBuffer": 50,
        "heightRef": [MockFunction],
        "inputHeightBuffer": 15,
        "width": 300,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "router": Object {
        "history": Object {},
        "route": Object {
          "location": Object {},
          "match": Object {
            "params": Object {},
            "path": undefined,
          },
        },
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "hydrateIn": undefined,
  },
}
`;

exports[`Containers PageExternal FormArrayContainerCode Forms FormContainerCodeVerifyEmail shallow renders correctly, with email additional and no email 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormContainerCodeVerifyEmail
    clearElement={[MockFunction]}
    codeTypes={
      Object {
        "verifyEmail": Object {
          "id": "verifyEmail",
          "needed": true,
        },
        "verifyEmailAdditional": Object {
          "id": "verifyEmailAdditional",
          "needed": true,
        },
        "verifyPhone": Object {
          "id": "verifyPhone",
          "needed": true,
        },
      }
    }
    dispatch={[Function]}
    fields={
      Object {
        "accountCustomer": Object {
          "id": "accountCustomer",
          "value": "",
        },
        "accountEmail": Object {
          "id": "accountEmail",
          "value": "",
        },
        "accountEmailAdditional": Object {
          "id": "accountEmailAdditional",
          "value": "test1@test.com",
        },
        "accountName": Object {
          "id": "accountName",
          "value": "",
        },
        "accountNameOnCard": Object {
          "id": "accountNameOnCard",
          "value": "",
        },
        "accountPhone": Object {
          "id": "accountPhone",
          "value": "",
        },
        "accountPromoCode": Object {
          "id": "accountPromoCode",
          "value": "",
        },
        "accountPromoCodeValid": Object {
          "id": "accountPromoCodeValid",
          "value": true,
        },
        "list": Array [
          "accountName",
          "accountEmail",
          "accountEmailAdditional",
          "accountPhone",
          "accountNameOnCard",
          "accountPromoCode",
          "accountPromoCodeValid",
          "accountCustomer",
        ],
      }
    }
    formHeightBuffer={50}
    heightRef={[MockFunction]}
    history={Object {}}
    inputHeightBuffer={15}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "path": undefined,
      }
    }
    mediaWidth={700}
    setHeight={
      [MockFunction] {
        "calls": Array [
          Array [
            "codeEmailVerifyForm",
          ],
          Array [
            "codeEmailVerifyForm",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    statusAuth={
      Object {
        "authStatusChangePassword": Object {
          "id": "authStatusChangePassword",
          "status": "IDLE",
        },
        "authStatusDeleteAccount": Object {
          "id": "authStatusDeleteAccount",
          "status": "SUCCESS",
        },
        "authStatusForgotPassword": Object {
          "id": "authStatusForgotPassword",
          "status": "IDLE",
        },
        "authStatusLogin": Object {
          "id": "authStatusLogin",
          "status": "IDLE",
        },
        "authStatusLoginMFA": Object {
          "id": "authStatusLoginMFA",
          "status": "IDLE",
        },
        "authStatusLogout": Object {
          "id": "authStatusLogout",
          "status": "SUCCESS",
        },
        "authStatusResetPassword": Object {
          "id": "authStatusResetPassword",
          "status": "IDLE",
        },
        "authStatusSignOutDevices": Object {
          "id": "authStatusSignOutDevices",
          "status": "IDLE",
        },
        "authStatusSignUp": Object {
          "id": "authStatusSignUp",
          "status": "IDLE",
        },
        "authStatusVerifyEmail": Object {
          "id": "authStatusVerifyEmail",
          "status": "IDLE",
        },
        "authStatusVerifyEmailLink": Object {
          "id": "authStatusVerifyEmailLink",
          "status": "IDLE",
        },
        "authStatusVerifyPhone": Object {
          "id": "authStatusVerifyPhone",
          "status": "IDLE",
        },
        "authStatusVerifyPhoneCode": Object {
          "id": "authStatusVerifyPhoneCode",
          "status": "IDLE",
        },
      }
    }
    width={300}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "email": "",
      "emailAdditional": "test1@test.com",
      "formHeightBuffer": 50,
      "heightRef": [MockFunction],
      "inputHeightBuffer": 15,
      "width": 300,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "",
        "emailAdditional": "test1@test.com",
        "formHeightBuffer": 50,
        "heightRef": [MockFunction],
        "inputHeightBuffer": 15,
        "width": 300,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "router": Object {
        "history": Object {},
        "route": Object {
          "location": Object {},
          "match": Object {
            "params": Object {},
            "path": undefined,
          },
        },
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "hydrateIn": undefined,
  },
}
`;

exports[`Containers PageExternal FormArrayContainerCode Forms FormContainerCodeVerifyEmail shallow renders correctly, with email and email additional 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormContainerCodeVerifyEmail
    clearElement={[MockFunction]}
    codeTypes={
      Object {
        "verifyEmail": Object {
          "id": "verifyEmail",
          "needed": true,
        },
        "verifyEmailAdditional": Object {
          "id": "verifyEmailAdditional",
          "needed": true,
        },
        "verifyPhone": Object {
          "id": "verifyPhone",
          "needed": true,
        },
      }
    }
    dispatch={[Function]}
    fields={
      Object {
        "accountCustomer": Object {
          "id": "accountCustomer",
          "value": "",
        },
        "accountEmail": Object {
          "id": "accountEmail",
          "value": "test@test.com",
        },
        "accountEmailAdditional": Object {
          "id": "accountEmailAdditional",
          "value": "test1@test.com",
        },
        "accountName": Object {
          "id": "accountName",
          "value": "",
        },
        "accountNameOnCard": Object {
          "id": "accountNameOnCard",
          "value": "",
        },
        "accountPhone": Object {
          "id": "accountPhone",
          "value": "",
        },
        "accountPromoCode": Object {
          "id": "accountPromoCode",
          "value": "",
        },
        "accountPromoCodeValid": Object {
          "id": "accountPromoCodeValid",
          "value": true,
        },
        "list": Array [
          "accountName",
          "accountEmail",
          "accountEmailAdditional",
          "accountPhone",
          "accountNameOnCard",
          "accountPromoCode",
          "accountPromoCodeValid",
          "accountCustomer",
        ],
      }
    }
    formHeightBuffer={50}
    heightRef={[MockFunction]}
    history={Object {}}
    inputHeightBuffer={15}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "path": undefined,
      }
    }
    mediaWidth={700}
    setHeight={
      [MockFunction] {
        "calls": Array [
          Array [
            "codeEmailVerifyForm",
          ],
          Array [
            "codeEmailVerifyForm",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    statusAuth={
      Object {
        "authStatusChangePassword": Object {
          "id": "authStatusChangePassword",
          "status": "IDLE",
        },
        "authStatusDeleteAccount": Object {
          "id": "authStatusDeleteAccount",
          "status": "SUCCESS",
        },
        "authStatusForgotPassword": Object {
          "id": "authStatusForgotPassword",
          "status": "IDLE",
        },
        "authStatusLogin": Object {
          "id": "authStatusLogin",
          "status": "IDLE",
        },
        "authStatusLoginMFA": Object {
          "id": "authStatusLoginMFA",
          "status": "IDLE",
        },
        "authStatusLogout": Object {
          "id": "authStatusLogout",
          "status": "SUCCESS",
        },
        "authStatusResetPassword": Object {
          "id": "authStatusResetPassword",
          "status": "IDLE",
        },
        "authStatusSignOutDevices": Object {
          "id": "authStatusSignOutDevices",
          "status": "IDLE",
        },
        "authStatusSignUp": Object {
          "id": "authStatusSignUp",
          "status": "IDLE",
        },
        "authStatusVerifyEmail": Object {
          "id": "authStatusVerifyEmail",
          "status": "IDLE",
        },
        "authStatusVerifyEmailLink": Object {
          "id": "authStatusVerifyEmailLink",
          "status": "IDLE",
        },
        "authStatusVerifyPhone": Object {
          "id": "authStatusVerifyPhone",
          "status": "IDLE",
        },
        "authStatusVerifyPhoneCode": Object {
          "id": "authStatusVerifyPhoneCode",
          "status": "IDLE",
        },
      }
    }
    width={300}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "email": "test@test.com",
      "emailAdditional": "test1@test.com",
      "formHeightBuffer": 50,
      "heightRef": [MockFunction],
      "inputHeightBuffer": 15,
      "width": 300,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "test@test.com",
        "emailAdditional": "test1@test.com",
        "formHeightBuffer": 50,
        "heightRef": [MockFunction],
        "inputHeightBuffer": 15,
        "width": 300,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "router": Object {
        "history": Object {},
        "route": Object {
          "location": Object {},
          "match": Object {
            "params": Object {},
            "path": undefined,
          },
        },
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "hydrateIn": undefined,
  },
}
`;

exports[`Containers PageExternal FormArrayContainerCode Forms FormContainerCodeVerifyEmail shallow renders correctly, with email and no email additional 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormContainerCodeVerifyEmail
    clearElement={[MockFunction]}
    codeTypes={
      Object {
        "verifyEmail": Object {
          "id": "verifyEmail",
          "needed": true,
        },
        "verifyEmailAdditional": Object {
          "id": "verifyEmailAdditional",
          "needed": true,
        },
        "verifyPhone": Object {
          "id": "verifyPhone",
          "needed": true,
        },
      }
    }
    dispatch={[Function]}
    fields={
      Object {
        "accountCustomer": Object {
          "id": "accountCustomer",
          "value": "",
        },
        "accountEmail": Object {
          "id": "accountEmail",
          "value": "test@test.com",
        },
        "accountEmailAdditional": Object {
          "id": "accountEmailAdditional",
          "value": "",
        },
        "accountName": Object {
          "id": "accountName",
          "value": "",
        },
        "accountNameOnCard": Object {
          "id": "accountNameOnCard",
          "value": "",
        },
        "accountPhone": Object {
          "id": "accountPhone",
          "value": "",
        },
        "accountPromoCode": Object {
          "id": "accountPromoCode",
          "value": "",
        },
        "accountPromoCodeValid": Object {
          "id": "accountPromoCodeValid",
          "value": true,
        },
        "list": Array [
          "accountName",
          "accountEmail",
          "accountEmailAdditional",
          "accountPhone",
          "accountNameOnCard",
          "accountPromoCode",
          "accountPromoCodeValid",
          "accountCustomer",
        ],
      }
    }
    formHeightBuffer={50}
    heightRef={[MockFunction]}
    history={Object {}}
    inputHeightBuffer={15}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "path": undefined,
      }
    }
    mediaWidth={700}
    setHeight={
      [MockFunction] {
        "calls": Array [
          Array [
            "codeEmailVerifyForm",
          ],
          Array [
            "codeEmailVerifyForm",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    statusAuth={
      Object {
        "authStatusChangePassword": Object {
          "id": "authStatusChangePassword",
          "status": "IDLE",
        },
        "authStatusDeleteAccount": Object {
          "id": "authStatusDeleteAccount",
          "status": "SUCCESS",
        },
        "authStatusForgotPassword": Object {
          "id": "authStatusForgotPassword",
          "status": "IDLE",
        },
        "authStatusLogin": Object {
          "id": "authStatusLogin",
          "status": "IDLE",
        },
        "authStatusLoginMFA": Object {
          "id": "authStatusLoginMFA",
          "status": "IDLE",
        },
        "authStatusLogout": Object {
          "id": "authStatusLogout",
          "status": "SUCCESS",
        },
        "authStatusResetPassword": Object {
          "id": "authStatusResetPassword",
          "status": "IDLE",
        },
        "authStatusSignOutDevices": Object {
          "id": "authStatusSignOutDevices",
          "status": "IDLE",
        },
        "authStatusSignUp": Object {
          "id": "authStatusSignUp",
          "status": "IDLE",
        },
        "authStatusVerifyEmail": Object {
          "id": "authStatusVerifyEmail",
          "status": "IDLE",
        },
        "authStatusVerifyEmailLink": Object {
          "id": "authStatusVerifyEmailLink",
          "status": "IDLE",
        },
        "authStatusVerifyPhone": Object {
          "id": "authStatusVerifyPhone",
          "status": "IDLE",
        },
        "authStatusVerifyPhoneCode": Object {
          "id": "authStatusVerifyPhoneCode",
          "status": "IDLE",
        },
      }
    }
    width={300}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "email": "test@test.com",
      "emailAdditional": "",
      "formHeightBuffer": 50,
      "heightRef": [MockFunction],
      "inputHeightBuffer": 15,
      "width": 300,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "test@test.com",
        "emailAdditional": "",
        "formHeightBuffer": 50,
        "heightRef": [MockFunction],
        "inputHeightBuffer": 15,
        "width": 300,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "router": Object {
        "history": Object {},
        "route": Object {
          "location": Object {},
          "match": Object {
            "params": Object {},
            "path": undefined,
          },
        },
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "hydrateIn": undefined,
  },
}
`;

exports[`Containers PageExternal FormArrayContainerCode Forms FormContainerCodeVerifyEmail shallow renders correctly, with loading indicator 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormContainerCodeVerifyEmail
    clearElement={[MockFunction]}
    codeTypes={
      Object {
        "verifyEmail": Object {
          "id": "verifyEmail",
          "needed": true,
        },
        "verifyEmailAdditional": Object {
          "id": "verifyEmailAdditional",
          "needed": true,
        },
        "verifyPhone": Object {
          "id": "verifyPhone",
          "needed": true,
        },
      }
    }
    dispatch={[Function]}
    fields={
      Object {
        "accountCustomer": Object {
          "id": "accountCustomer",
          "value": "",
        },
        "accountEmail": Object {
          "id": "accountEmail",
          "value": "",
        },
        "accountEmailAdditional": Object {
          "id": "accountEmailAdditional",
          "value": "",
        },
        "accountName": Object {
          "id": "accountName",
          "value": "",
        },
        "accountNameOnCard": Object {
          "id": "accountNameOnCard",
          "value": "",
        },
        "accountPhone": Object {
          "id": "accountPhone",
          "value": "",
        },
        "accountPromoCode": Object {
          "id": "accountPromoCode",
          "value": "",
        },
        "accountPromoCodeValid": Object {
          "id": "accountPromoCodeValid",
          "value": true,
        },
        "list": Array [
          "accountName",
          "accountEmail",
          "accountEmailAdditional",
          "accountPhone",
          "accountNameOnCard",
          "accountPromoCode",
          "accountPromoCodeValid",
          "accountCustomer",
        ],
      }
    }
    formHeightBuffer={50}
    heightRef={[MockFunction]}
    history={Object {}}
    inputHeightBuffer={15}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "path": undefined,
      }
    }
    mediaWidth={700}
    setHeight={
      [MockFunction] {
        "calls": Array [
          Array [
            "codeEmailVerifyForm",
          ],
          Array [
            "codeEmailVerifyForm",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    statusAuth={
      Object {
        "authStatusChangePassword": Object {
          "id": "authStatusChangePassword",
          "status": "IDLE",
        },
        "authStatusDeleteAccount": Object {
          "id": "authStatusDeleteAccount",
          "status": "SUCCESS",
        },
        "authStatusForgotPassword": Object {
          "id": "authStatusForgotPassword",
          "status": "IDLE",
        },
        "authStatusLogin": Object {
          "id": "authStatusLogin",
          "status": "IDLE",
        },
        "authStatusLoginMFA": Object {
          "id": "authStatusLoginMFA",
          "status": "IDLE",
        },
        "authStatusLogout": Object {
          "id": "authStatusLogout",
          "status": "SUCCESS",
        },
        "authStatusResetPassword": Object {
          "id": "authStatusResetPassword",
          "status": "IDLE",
        },
        "authStatusSignOutDevices": Object {
          "id": "authStatusSignOutDevices",
          "status": "IDLE",
        },
        "authStatusSignUp": Object {
          "id": "authStatusSignUp",
          "status": "IDLE",
        },
        "authStatusVerifyEmail": Object {
          "id": "authStatusVerifyEmail",
          "status": "IDLE",
        },
        "authStatusVerifyEmailLink": Object {
          "id": "authStatusVerifyEmailLink",
          "status": "IDLE",
        },
        "authStatusVerifyPhone": Object {
          "id": "authStatusVerifyPhone",
          "status": "IDLE",
        },
        "authStatusVerifyPhoneCode": Object {
          "id": "authStatusVerifyPhoneCode",
          "status": "IDLE",
        },
      }
    }
    width={300}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "email": "",
      "emailAdditional": "",
      "formHeightBuffer": 50,
      "heightRef": [MockFunction],
      "inputHeightBuffer": 15,
      "width": 300,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "email": "",
        "emailAdditional": "",
        "formHeightBuffer": 50,
        "heightRef": [MockFunction],
        "inputHeightBuffer": 15,
        "width": 300,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "router": Object {
        "history": Object {},
        "route": Object {
          "location": Object {},
          "match": Object {
            "params": Object {},
            "path": undefined,
          },
        },
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "hydrateIn": undefined,
  },
}
`;
