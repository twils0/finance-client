// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly 1`] = `
<mockConstructor
  stripe={
    Object {
      "test": "testStripe",
    }
  }
>
  <mockConstructor>
    <FormBilling
      currentFormBool={false}
      editForm={false}
      handleInputChange={[Function]}
      headerWidthBufferRight={10}
      heightRef={[MockFunction]}
      inputs={
        Object {
          "billingNameOnCard": Object {
            "errorMessage": "",
            "id": "billingNameOnCard",
            "parentId": "billingForm",
            "value": "testNameOnCard",
          },
          "billingPromoCode": Object {
            "errorMessage": "",
            "id": "billingPromoCode",
            "parentId": "billingForm",
            "value": "testPromoCode",
          },
          "billingStripe": Object {
            "errorMessage": "",
            "id": "billingStripe",
            "parentId": "billingForm",
            "value": "",
          },
        }
      }
      mediaWidth={874}
      rowHeight={60}
      rowHeightBuffer={18}
      rowWidthIndent={10}
      stripeRef={[MockFunction]}
    />
  </mockConstructor>
</mockConstructor>
`;

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly and calls handleInputChange, with no name on card error 1`] = `
<mockConstructor
  stripe={
    Object {
      "test": "testStripe",
    }
  }
>
  <mockConstructor>
    <FormBilling
      currentFormBool={false}
      editForm={false}
      handleInputChange={[Function]}
      headerWidthBufferRight={10}
      heightRef={[MockFunction]}
      inputs={
        Object {
          "billingNameOnCard": Object {
            "errorMessage": "Please enter the name shown on your credit card.",
            "id": "billingNameOnCard",
            "parentId": "billingForm",
            "value": "",
          },
          "billingPromoCode": Object {
            "errorMessage": "",
            "id": "billingPromoCode",
            "parentId": "billingForm",
            "value": "",
          },
          "billingStripe": Object {
            "errorMessage": "",
            "id": "billingStripe",
            "parentId": "billingForm",
            "value": "",
          },
        }
      }
      mediaWidth={874}
      rowHeight={60}
      rowHeightBuffer={18}
      rowWidthIndent={10}
      stripeRef={[MockFunction]}
    />
  </mockConstructor>
</mockConstructor>
`;

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly and calls handleInputChange, with promo code expired error 1`] = `
<mockConstructor
  stripe={
    Object {
      "test": "testStripe",
    }
  }
>
  <mockConstructor>
    <FormBilling
      currentFormBool={false}
      editForm={false}
      handleInputChange={[Function]}
      headerWidthBufferRight={10}
      heightRef={[MockFunction]}
      inputs={
        Object {
          "billingNameOnCard": Object {
            "errorMessage": "",
            "id": "billingNameOnCard",
            "parentId": "billingForm",
            "value": "",
          },
          "billingPromoCode": Object {
            "errorMessage": "This promo code is no longer valid.",
            "id": "billingPromoCode",
            "parentId": "billingForm",
            "value": "wrongPromoCode",
          },
          "billingStripe": Object {
            "errorMessage": "",
            "id": "billingStripe",
            "parentId": "billingForm",
            "value": "",
          },
        }
      }
      mediaWidth={874}
      rowHeight={60}
      rowHeightBuffer={18}
      rowWidthIndent={10}
      stripeRef={[MockFunction]}
    />
  </mockConstructor>
</mockConstructor>
`;

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly and calls handleInputChange, with promo code invalid error 1`] = `
<mockConstructor
  stripe={
    Object {
      "test": "testStripe",
    }
  }
>
  <mockConstructor>
    <FormBilling
      currentFormBool={false}
      editForm={false}
      handleInputChange={[Function]}
      headerWidthBufferRight={10}
      heightRef={[MockFunction]}
      inputs={
        Object {
          "billingNameOnCard": Object {
            "errorMessage": "",
            "id": "billingNameOnCard",
            "parentId": "billingForm",
            "value": "",
          },
          "billingPromoCode": Object {
            "errorMessage": "Please enter a valid promo code.",
            "id": "billingPromoCode",
            "parentId": "billingForm",
            "value": "wrongPromoCode",
          },
          "billingStripe": Object {
            "errorMessage": "",
            "id": "billingStripe",
            "parentId": "billingForm",
            "value": "",
          },
        }
      }
      mediaWidth={874}
      rowHeight={60}
      rowHeightBuffer={18}
      rowWidthIndent={10}
      stripeRef={[MockFunction]}
    />
  </mockConstructor>
</mockConstructor>
`;

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly and calls handleInputChange, with undefined error 1`] = `
<mockConstructor
  stripe={
    Object {
      "test": "testStripe",
    }
  }
>
  <mockConstructor>
    <FormBilling
      currentFormBool={false}
      editForm={false}
      handleInputChange={[Function]}
      headerWidthBufferRight={10}
      heightRef={[MockFunction]}
      inputs={
        Object {
          "billingNameOnCard": Object {
            "errorMessage": "",
            "id": "billingNameOnCard",
            "parentId": "billingForm",
            "value": "",
          },
          "billingPromoCode": Object {
            "errorMessage": "",
            "id": "billingPromoCode",
            "parentId": "billingForm",
            "value": "",
          },
          "billingStripe": Object {
            "errorMessage": "Please try your request again. If unsuccessful on subsequent attempts, please contact customer service.",
            "id": "billingStripe",
            "parentId": "billingForm",
            "value": "Please try your request again. If unsuccessful on subsequent attempts, please contact customer service.",
          },
        }
      }
      mediaWidth={874}
      rowHeight={60}
      rowHeightBuffer={18}
      rowWidthIndent={10}
      stripeRef={[MockFunction]}
    />
  </mockConstructor>
</mockConstructor>
`;

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly, with expired promo code, componentWillUpdate, componentDidUpdate, and componentWillUnmount 1`] = `
<mockConstructor
  stripe={
    Object {
      "test": "testStripe",
    }
  }
>
  <mockConstructor>
    <FormBilling
      currentFormBool={false}
      editForm={false}
      handleInputChange={[Function]}
      headerWidthBufferRight={10}
      heightRef={[MockFunction]}
      inputs={
        Object {
          "billingNameOnCard": Object {
            "errorMessage": "",
            "id": "billingNameOnCard",
            "parentId": "billingForm",
            "value": "testNameOnCard",
          },
          "billingPromoCode": Object {
            "errorMessage": "This promo code is no longer valid.",
            "id": "billingPromoCode",
            "parentId": "billingForm",
            "value": "wrongPromoCode",
          },
          "billingStripe": Object {
            "errorMessage": "",
            "id": "billingStripe",
            "parentId": "billingForm",
            "value": "",
          },
        }
      }
      mediaWidth={874}
      rowHeight={60}
      rowHeightBuffer={18}
      rowWidthIndent={10}
      stripeRef={[MockFunction]}
    />
  </mockConstructor>
</mockConstructor>
`;

exports[`Containers PageInternal PageBodyContainerAccount Forms FormContainerBilling shallow renders correctly, with loading indicator 1`] = `
<FlexColumn
  alignItems={null}
  alignSelf={null}
  borderColorType="border"
  borderRadius={null}
  borderStyle={null}
  borderWidth={null}
  boxSizing={null}
  color={Object {}}
  display={null}
  flex={null}
  flexWrap={null}
  height="0px"
  justifyContent={null}
  margin={null}
  mediaWidth={null}
  minHeight={null}
  minWidth={null}
  overflowX={null}
  overflowY={null}
  padding={null}
  position={null}
  responsiveAlignSecurities={null}
  responsiveJustifyContent={null}
  responsiveMargin={null}
  responsivePadding={null}
  responsivePosition={null}
  responsiveWidth={null}
  separator={false}
  themeColor="primary"
  width="100%"
>
  <BeatLoader
    color="#7367e6"
    loading={true}
    margin="2px"
    size="15px"
  />
</FlexColumn>
`;
